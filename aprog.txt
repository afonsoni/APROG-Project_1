package i;
public class I {   
    public static void main(String[] args) {
    public String Description; //Type of Card//
    public String id; //member's id//
    public String name; //member's name//
    public int frequency; //member's frequency in the gym//
    public static DecimalFormat idFormatter = new DecimalFormat("000000");
    public static DecimalFormatter = new DecimalFormat("####.00");
        int d;
        int h;
        int egg1;
        int egg2;
        int grupo;
        int Ioga;
        int Pilates;
        int Zumba;
        int Step;
        int musculacao;
        int pt;
GymMembership (String memberName){
    name = memberName;
    frequency = 0;
    System.out.println("Erro : Tipo de conta não especificado");
}
public void comeToGym(int howMany){
    frequency += howMany;
}
public String toString(){
    return "\nMember :" + name + "\n" +
            "ID : " + id + "\n" + 
            "Type : " + description + "\n" +
            "Mean Frequency/Week : " + frequency/52f + "\n" +
            }
class FitMembership extends GymMembership {
	
	private static int lastId = 0;
}
FitMembership(String memberName)
	{
		super(memberName);
		id = generateNewId();
		description = "Fit";
	}
public String generateNewId()
	{
		lastId ++;
		return idFormatter.format(lastId);
	}
public float getTotalCharge()
	{
		float sum = 250;  // yearly fee
		float meanFreq = frequency/52f;
		if (meanFreq < 4) 
			sum += 20*12;  // extra charge

		sum += (numOfYogurt * 0.75 * YOGURT_PRICE);
		return sum;
	}
class FabMembership extends GymMembership {
	
	public static int lastId = 500000;

	FabMembership(String memberName)
	{
		super(memberName);
		id = generateNewId();
		description = "Fab";
	}

	public String generateNewId()
	{
		lastId ++;
		return idFormatter.format(lastId);
	}

	public float getTotalCharge()
	{
		float sum = 100;  
		float meanFreq = frequency/52f;
		if (meanFreq > 3) 
			sum += 25*12; 
	}


//calcular medias de visitas do genero masculino e feminino, e de clientes, qual dia houve mais visitas, horarios mais frequentados, percentagens que solicitaram servicos de PT, quantos aderiram a cada um dos diferentes cartoes, e montante auferido//
           
        
        
        
        //Time Table Part://
        for(d=1; d<3, d++); {
                for(h=7; h<12, h++); {
                    System.out.println("Manhã");
                }
                for(h=12; h<17, h++); {
                    System.out.println("Tarde");
                }
                //Agora não pode ser como os outros For porque não pode haver mais horas depois das 21h)//
                for(h=17; h<=21) do;{
                    System.out.println("Noite");
                }
                if(h>21) {
                    System.out.println("O ginásio encontra-se fechado");
                }
                //easteregg//
                while(h=420) {
                    System.out.println("Smoke Weed Everyday");
                } do;
                while(h=24) {
                    System.out.println("Bem vindo às aulas secretas do Ginásio Fitness. Aqui pode treinar as suas capacidades de dragão e de ninja simultaneamente, com o pai do Sr. Dr. Hércules (The God) God, Zeus o senhor Engenheiro e Carpinteiro de Ninjas do sudoeste.");
                } do;     
            }
             
    class Gym {
	public static void main (String args[])
	{
		FitMembership billGates = new FitMembership ("Nome Que Se Quer");
		Nome Que Se Quer.buyYogurt(1);
		Nome Que Se Quer.buyYogurt(29);
		Nome Que Se Quer.comeToGym(41);
		Nome Que Se Quer.buyYogurt(9);
		Nome Que Se Quer.comeToGym(21);
		Nome Que Se Quer.comeToGym(19);
		Nome Que Se Quer.comeToGym(50);
		float cost = Nome Que Se Quer.getTotalCharge();
		System.out.println(Nome Que Se Quer.toString());
		System.out.println("Total cost : $"  + GymMembership.costFormatter.format(cost));

		FabMembership Nome Que Se Quer = new FabMembership ("Nome Que Se Quer");
		Nome Que Se Quer.buyYogurt(21);
		Nome Que Se Quer.buyYogurt(23);
		Nome Que Se Quer.comeToGym(21);
		Nome Que Se Quer.buyYogurt(19);
		Nome Que Se Quer.comeToGym(11);
		Nome Que Se Quer.comeToGym(9);
		Nome Que Se Quer.comeToGym(5);
		cost = Nome Que Se Quer.getTotalCharge();
		System.out.println(Nome Que Se Quer.toString());
		System.out.println("Total cost : $"  + GymMembership.costFormatter.format(cost));

		FabMembership Nome Que Se Quer = new FabMembership ("Nome Que Se Quer");
		Nome Que Se Quer.buyYogurt(91);
		Nome Que Se Quer.comeToGym(231);
		Nome Que Se Quer.comeToGym(135);
		Nome Que Se Quer.buyYogurt(84);
		Nome Que Se Quer.comeToGym(160);
		Nome Que Se Quer.comeToGym(70);
		cost = Nome Que Se Quer.getTotalCharge();
		System.out.println(Nome Que Se Quer.toString());
		System.out.println("Total cost : $"  + GymMembership.costFormatter.format(cost));
	}
}            
    }
}
}





//////////////http://www.cs.cornell.edu/courses/cs100/1999su/P2%20Solutions/Gym.java.html////////////////////////
